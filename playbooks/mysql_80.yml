---
# This playbook sets up the percona repo

- hosts: all
  become: true
  become_method: sudo

  tasks:

# - name: Install percona repository package
#   apt:
#     deb: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
#   when: ansible_os_family == "Debian"

  - name: Install MySQL apt repository package
    apt:
      deb: https://dev.mysql.com/get/mysql-apt-config_0.8.13-1_all.deb
    when: ansible_os_family == "Debian"

  - name: Install MySQL RHEL 6 yum repository package 
    yum: name=https://dev.mysql.com/get/mysql80-community-release-el6-1.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: Install MySQL RHEL 7 yum repository package 
    yum: name=https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: epel 6 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: epel 8 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install deb packages 
    apt:
      name: "{{ packages }}"
      update_cache: yes 
    vars: 
      packages:
      - vim
      - pv
      - unzip
    when: ansible_os_family == "Debian"

  - name: install MySQL Community deb packages 
    apt:
      name: "{{ packages }}"
      update_cache: yes 
    vars: 
      packages:
      - mysql-community-server
    when: ansible_os_family == "Debian"

  - name: install packages in centos
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - libselinux-python
      - pv
      - unzip
      - mysql-community-server
    when: ansible_os_family == "RedHat"

  - name: Start the MySQL service  
    service: name=mysql state=started
    when: ansible_os_family == "Debian"

  - name: Start the MySQL service  
    service: name=mysqld state=started
    when: ansible_os_family == "RedHat"

  - name: set root password
    command: /vagrant/setpass_57.sh
    when: ansible_os_family == "RedHat" 

  - name: include tasks for enabling tools test repo
    include: ../tasks/enable_tools_testing_repo.yml

  - name: install PXB 8 deb packages 
    apt:
      name: "{{ packages }}"
      update_cache: yes 
    vars: 
      packages:
      - percona-xtrabackup-80
      - percona-xtrabackup-test-80
      - percona-xtrabackup-dbg-80
      - percona-toolkit
    when: ansible_os_family == "Debian"

  - name: install PXB 8 rpm packages
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - percona-xtrabackup-80
      - percona-xtrabackup-test-80
      - percona-xtrabackup-80-debuginfo
      - percona-toolkit
    when: ansible_os_family == "RedHat"

  - name: PXB version check
    command: /vagrant/version_check.sh pxb80

# - name: PT version check
#   command: /vagrant/version_check.sh pt

  - name: import databases
    command: /vagrant/upstream_db.sh

  - name: run backup
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/

  - name: run backup
    command: /usr/bin/xtrabackup --prepare --user=root --target-dir=/tmp/backups/
