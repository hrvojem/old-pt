---
# This playbook sets up the percona repo

- hosts: all
  become: true
  become_method: sudo

  tasks:
  # Add an Apt signing key, will not download if present
  - name: Install percona repository package
    apt:
      deb: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
    when: ansible_os_family == "Debian"

  - name: add the yum percona repos 
    yum: name=https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 6

  - name: epel 6 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: enable ps80 repo
    command: percona-release enable ps-80

  - name: enable testing repo
    command: percona-release enable original testing

  - name: install deb packages 
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars: 
      packages:
      - vim
      - sysbench
      - sysbench-tpcc
      - pv
      - percona-server-server
      - percona-xtrabackup-80
      - percona-xtrabackup-test-80
      - percona-xtrabackup-dbg-80
      - percona-toolkit
    when: ansible_os_family == "Debian"

  - name: install packages in centos
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - libselinux-python
      - sysbench-tpcc
      - percona-server-server
      - percona-toolkit
      - percona-xtrabackup-80
      - percona-xtrabackup-test-80
      - percona-xtrabackup-80-debuginfo
    when: ansible_os_family == "RedHat"

  - command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - command: systemctl start mysql
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: set root password
    command: /vagrant/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: copy .my.cnf
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"

  - name: PXB-8.0 package version check
    command: /vagrant/package_check.sh pxb80

# - name: add sbt database
#   command: mysql -e "CREATE DATABASE sbt;"

# - name: run sysbench tpcc prepare script
#   command: /usr/share/sysbench/tpcc.lua --mysql-user=root --mysql-db=sbt --time=30 --threads=64 --report-interval=1 --tables=3 --scale=5 --db-driver=mysql prepare

# - name: run sysbench tpcc benchmark
#   command: /usr/share/sysbench/tpcc.lua --mysql-user=root --mysql-db=sbt --time=30 --threads=64 --report-interval=1 --tables=3 --scale=5 --db-driver=mysql run

  - name: run backup
    command: /usr/bin/xtrabackup --backup --user=root --target-dir=/tmp/backups/

  - name: prepare backup
    command: /usr/bin/xtrabackup --prepare --target-dir=/tmp/backups/
