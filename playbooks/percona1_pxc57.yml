---
# This playbook sets up the first node for PXC on Centos

- hosts: all
  sudo: yes

  tasks:
  - name: remove mysql-libs
    yum: name=mysql-libs state=absent
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"
  - name: install stuff
    yum: name={{item}} state=present
    with_items:
    - libselinux-python
  - selinux: state=disabled
  - name: add firewall rules
    command: /sbin/iptables -I INPUT -s {{item}} -p tcp -j ACCEPT
    with_items:
    - 192.168.70.73
    - 192.168.70.72
    - 192.168.70.71
  - name: add the percona repo
    yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm
  - name: add the epel repo for centos7 
    yum: name=http://anorien.csc.warwick.ac.uk/mirrors/epel/7/x86_64/e/epel-release-7-6.noarch.rpm
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  - name: add the epel repo for centos6
    yum: name=https://anorien.csc.warwick.ac.uk/mirrors/epel/6/x86_64/epel-release-6-8.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"
  - name: install PXC
    yum: name={{item}} state=present enablerepo=percona-testing-x86_64
    with_items:
    - Percona-XtraDB-Cluster-full-57.x86_64 
    - pv 
    - MySQL-python 
  - name: copy pxc config
    template: src=/home/hrvoje/worktable/package-testing/templates/my_rpm.j2 dest=/etc/my.cnf
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"
  - name: copy pxc config
    template: src=/home/hrvoje/worktable/package-testing/templates/my_rpm_7.j2 dest=/etc/my.cnf
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  - command: service mysql bootstrap-pxc
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"
  - command: systemctl start mysql@bootstrap.service
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  - name: set root password
    command: /vagrant/setpass_57.sh
    when: ansible_os_family == "RedHat"
  - name: copy .my.cnf
    template: src=/home/hrvoje/worktable/package-testing/templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"
  - name: create the backup user
    mysql_user: name=sstuser password=s3cretPass priv="*.*:RELOAD, PROCESS, LOCK TABLES,REPLICATION CLIENT" state=present
  - name: install plugins
    command: /vagrant/plugins_test_57.sh

