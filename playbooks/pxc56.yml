---
# This playbook sets up the first PXC node from percona repo

- hosts: all
  become: true
  become_method: sudo

  tasks:

    # find vm ip so that it can be used in templates
  - debug: var=ansible_all_ipv4_addresses
  - set_fact:
      man_ip: "{{ item }}"
    with_items: "{{ ansible_all_ipv4_addresses }}"
    when: "item.startswith('192.168')"
  - debug: var=man_ip

    # add old apt repo key
  - apt_key: id=CD2EFD2A keyserver=keys.gnupg.net state=present

    # add new apt repo key
  - apt_key: id=8507EFA5 keyserver=keys.gnupg.net state=present

  - name: add the repo
    apt_repository: repo='deb [arch=amd64] http://192.168.88.9/apt {{ansible_lsb.codename}} main testing' state=present
   # apt_repository: repo='deb http://repo.percona.com/apt {{ansible_lsb.codename}} main' state=present
  # Add an Apt signing key, will not download if present
#  - name: pin the percona repo for trusty
#    copy: src=/home/hrvoje/worktable/percona-cluster/00percona.pref dest=/etc/apt/preferences.d/
#  - name: copy apt-cacher-ng proxy file
#    copy: src=/home/hrvoje/worktable/package-testing/01proxy dest=/etc/apt/apt.conf.d/
#    when: ansible_os_family == "Debian"
  - name: install vim, pv, python-mysqldb, and PXC-5.6
    apt: name={{item}} update_cache=yes
    with_items:
    - vim
    - sysbench
    - pv
    - percona-xtradb-cluster-full-56
    - python-mysqldb
  # stop mysql service
  - service: name=mysql pattern=/usr/bin/mysqld_safe state=stopped 
  - name: configure PXC
    template: src=/home/hrvoje/worktable/package-testing/templates/my.j2 
              dest=/etc/mysql/my.cnf
              mode=0640 owner=mysql group=root
  #bootstrap the cluster
  - command: service mysql bootstrap-pxc
  #add sstuser
  - mysql_user: name=sstuser password=s3cretPass priv="*.*:PROCESS,RELOAD,LOCK TABLES,REPLICATION CLIENT" state=present
  - name: install plugins
    command: /vagrant/plugins_test_pxc_56.sh 
  - name: run sysbench
    command: /vagrant/sb.sh
# - name: install 3rd party packages
#   apt: name={{item}} 
#   with_items:
#   - cacti
#   - rsyslog-mysql
