---
# This playbook sets up the percona repo

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: Install percona repository package
    apt:
      deb: https://repo.percona.com/apt/percona-release_0.1-6.{{ansible_lsb.codename}}_all.deb
    when: ansible_os_family == "Debian"

  - name: add the deb repo
    apt_repository: repo='deb http://repo.percona.com/apt {{ansible_lsb.codename}} experimental' state=present update_cache=yes
    when: ansible_os_family == "Debian"

  - name: add the yum percona repos 
    yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-6/percona-release-0.1-6.noarch.rpm
    when: ansible_os_family == "RedHat" 

  - name: epel 6 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  # Enable SELinux on CentOS
# - selinux:
#     policy: targeted
#     state: enforcing
#   when: ansible_os_family == "RedHat"

  - name: install deb packages 
    apt: name={{item}} update_cache=yes
    with_items: 
    - vim
    - pv
    - unzip
    when: ansible_os_family == "Debian"

  - name: install deb packages 
    apt: name={{item}} update_cache=yes
    with_items: 
    - percona-toolkit
    - percona-server-server-8.0
    - percona-server-test-8.0
    - percona-server-8.0-dbg
    - percona-server-source-8.0
    - percona-server-tokudb-8.0
    - percona-server-rocksdb-8.0
    - percona-xtrabackup-test-80
    - percona-xtrabackup-dbg-80
    - percona-xtrabackup-80
    - sysbench
    - sysbench-tpcc
    when: ansible_os_family == "Debian"

  - name: install packages in centos
    yum: name={{item}} state=present enablerepo=percona-experimental-x86_64 
    with_items:
    - libselinux-python
    - pv
    - unzip
    - Percona-Server-server-80
    - Percona-Server-test-80
    - Percona-Server-80-debuginfo
    - Percona-Server-devel-80
    - Percona-Server-tokudb-80
    - Percona-Server-rocksdb-80
    - percona-toolkit
    - percona-xtrabackup-80
    - percona-xtrabackup-test-80
    - percona-xtrabackup-80-debuginfo
    when: ansible_os_family == "RedHat"

  - name: install latest bats from github
    command: "{{ item }}"
    with_items:
    - rm -f master.zip
    - wget --no-check-certificate -O master.zip https://github.com/sstephenson/bats/archive/master.zip
    - unzip master.zip
    - rm -f master.zip
    - bats-master/install.sh /usr/local
    - rm -rf bats-master

  - service: name=mysql state=started
#   when: ansible_os_family == "RedHat"

# - name: copy group replication settings
#   template: src=../templates/group_replication.j2
#             dest=/etc/mysql/percona-server.conf.d/gr.cnf
#   when: ansible_os_family == "Debian"

  - name: set root password
    command: /vagrant/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: install tokudb
    command: /usr/bin/ps-admin --enable-tokudb

  - name: install tokubackup
    command: /usr/bin/ps-admin --enable-tokubackup

  - service: name=mysql state=restarted
    when: ansible_os_family == "RedHat"

  - service: name=mysql state=restarted
    when: ansible_os_family == "Debian"

  - name: install tokudb
    command: /usr/bin/ps-admin --enable-tokubackup

  - name: install rocksdb
    command: /usr/bin/ps-admin --enable-rocksdb

  - name: install plugins
    command: /vagrant/plugins_test_80.sh

  - name: version check
    command: /vagrant/version_check.sh ps80

  - name: Percona Server 8.0 package version check
    command: /vagrant/package_check.sh ps80
