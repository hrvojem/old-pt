---
# This playbook sets up the percona repo

- hosts: all
  sudo: yes

  tasks:
  # Add an Apt signing key, will not download if present
  - apt_key: id=CD2EFD2A keyserver=keys.gnupg.net state=present
    when: ansible_os_family == "Debian"
  - name: add the deb repo
    apt_repository: repo='deb [arch=amd64] http://192.168.88.9/apt {{ansible_lsb.codename}} main' state=present update_cache=yes
 #   apt_repository: repo='deb http://repo.percona.com/apt {{ansible_lsb.codename}} main testing' state=present update_cache=yes
    when: ansible_os_family == "Debian"
  - name: add the yum percona repos 
    yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm
    when: ansible_os_family == "RedHat" 
  - name: epel 6 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"
  - name: epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  - name: install deb packages 
    apt: name={{item}} update_cache=yes
    with_items: 
    - vim
    - pv
    - percona-xtrabackup-24
    - percona-toolkit
    - percona-server-server-5.7
    - percona-server-test-5.7
    - percona-server-5.7-dbg
    - percona-server-source-5.7
    - percona-server-tokudb-5.7
    - percona-xtrabackup-test-24
    - percona-xtrabackup-dbg-24
    when: ansible_os_family == "Debian"
  - name: install packages in centos
    yum: name={{item}} state=present #enablerepo=percona-testing-x86_64 
    with_items:
    - libselinux-python
    - pv
    - Percona-Server-server-57
    - Percona-Server-test-57
    - Percona-Server-57-debuginfo
    - Percona-Server-devel-57
    - Percona-Server-tokudb-57
    - percona-toolkit
    - percona-xtrabackup-24
    when: ansible_os_family == "RedHat"
  - name: start the MySQL service
    command: service mysql start
    when: ansible_os_family == "RedHat"
  - name: set root password
    command: /vagrant/setpass_57.sh
    when: ansible_os_family == "RedHat"
  - name: copy .my.cnf
    template: src=/home/hrvoje/worktable/package-testing/templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"
  - name: install tokudb
    command: /usr/bin/ps_tokudb_admin --enable
  - name: install tokubackup
    command: /usr/bin/ps_tokudb_admin --enable-backup
  - service: name=mysql state=restarted
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"
  - service: name=mysqld state=restarted
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  - service: name=mysql state=restarted
    when: ansible_os_family == "Debian"
  - name: install tokudb
    command: /usr/bin/ps_tokudb_admin --enable
  - name: install plugins
    command: /vagrant/plugins_test_57.sh
  - name: install tokubackup
    command: /usr/bin/ps_tokudb_admin --enable-backup
  - name: version check
    command: /vagrant/version_check.sh
# - name: remove the deb repo
#   apt_repository: repo='deb [arch=amd64] http://192.168.88.9/apt {{ansible_lsb.codename}} main' state=absent update_cache=yes
#   when: ansible_os_family == "Debian"
# - name: add the testing deb repo
#   apt_repository: repo='deb [arch=amd64] http://192.168.5.9/apt {{ansible_lsb.codename}} main testing' state=present update_cache=yes
#   when: ansible_os_family == "Debian"
# - name: apt-get upgrade
#   apt: upgrade=safe
#   when: ansible_os_family == "Debian"
