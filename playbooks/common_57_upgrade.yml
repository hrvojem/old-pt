---
# This playbook tests the PS-5.7 upgrade 

- hosts: all
  become: true
  become_method: sudo

  tasks:

  - name: Install percona repository package
    apt:
      deb: https://repo.percona.com/apt/percona-release_0.1-8.{{ansible_lsb.codename}}_all.deb
    when: ansible_os_family == "Debian"

  - name: add the deb repo
    apt_repository: repo='deb http://repo.percona.com/apt {{ansible_lsb.codename}} main' state=present update_cache=yes
    when: ansible_os_family == "Debian"

  - name: add the yum percona repos 
    yum: name=https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 6

  - name: epel 6 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present 
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: install deb packages 
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars: 
      packages:
      - aptitude
      - vim
      - pv
      - percona-server-server-5.7
      - percona-xtrabackup-24
      - percona-toolkit
      - percona-server-test-5.7
      - percona-server-5.7-dbg
      - percona-server-source-5.7
      - percona-server-tokudb-5.7
      - percona-server-rocksdb-5.7
    when: ansible_os_family == "Debian"

  - name: install packages in centos
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - libselinux-python
      - pv
      - Percona-Server-server-57
      - Percona-Server-test-57
      - Percona-Server-tokudb-57
      - Percona-Server-rocksdb-57
      - Percona-Server-57-debuginfo
#     - Percona-Server-shared-compat-57
      - Percona-Server-devel-57
      - percona-toolkit
      - percona-xtrabackup-24
    when: ansible_os_family == "RedHat"

  - name: start mysql service with service command
    command: service mysql start
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: start mysql service with systemd
    command: systemctl start mysql
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: set root password
    command: /vagrant/setpass_57.sh
    when: ansible_os_family == "RedHat"

  - name: copy .my.cnf
    template: src=../templates/my_57.j2
              dest=/root/.my.cnf
              mode=0640 owner=root group=root
    when: ansible_os_family == "RedHat"

  - name: install tokudb
    command: /usr/bin/ps_tokudb_admin --enable

  - name: install tokubackup
    command: /usr/bin/ps_tokudb_admin --enable-backup

  - name: install rocksdb
    command: /usr/bin/ps-admin --enable-rocksdb

  - service: name=mysql state=restarted
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - service: name=mysqld state=restarted
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - service: name=mysql state=restarted
    when: ansible_os_family == "Debian"

  - name: install tokudb
    command: /usr/bin/ps_tokudb_admin --enable
 
  - name: install tokubackup
    command: /usr/bin/ps_tokudb_admin --enable-backup

  - name: install plugins
    command: /vagrant/plugins_test_57.sh

  - name: install 3rd party packages
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - rsyslog-mysql
    when: ansible_os_family == "Debian"

  - name: start my.cnf change test
    command: /vagrant/check_mycnf_pre.sh default

  - name: remove the Percona apt main repository
    apt_repository: repo='deb http://repo.percona.com/apt {{ ansible_lsb.codename }} main' state=absent update_cache=yes
    when: ansible_os_family == "Debian"

  - name: enable deb testing repos
    apt_repository: repo='deb http://repo.percona.com/apt {{ ansible_lsb.codename }} main testing' state=present update_cache=yes
    when: ansible_os_family == "Debian" 

  - name: run upgrade on Debian/Ubuntu
    apt: upgrade=yes
    when: ansible_os_family == "Debian" 
    
  - name: enable testing repo on Redhat
    command: percona-release enable original testing
    when: ansible_os_family == "RedHat"

  - name: upgrade Percona Server to new rpm packages
    yum:
       name: "{{ packages }}"
       state: latest
    vars:
      packages:
      - Percona-Server-server-57
      - Percona-Server-test-57
      - Percona-Server-57-debuginfo
      - Percona-Server-devel-57
      - Percona-Server-tokudb-57
      - Percona-Server-rocksdb-57
    when: ansible_os_family == "RedHat"

  - name: install Percona Server new rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
       - Percona-Server-shared-compat-57
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: run mysql_upgrade
    command: /usr/bin/mysql_upgrade

  - name: check that Percona Server 5.7 server version is correct
    command: /vagrant/version_check.sh ps57

  - name: check that Percona Server 5.7 package version is correct
    command: /vagrant/package_check.sh ps57

  - name: finish my.cnf change test
    command: /vagrant/check_mycnf_post.sh
