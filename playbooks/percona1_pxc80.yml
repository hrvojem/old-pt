---
# This playbook sets up the first node for PXC on Centos

- hosts: all
  become: true
  become_method: sudo

  tasks:

  - name: install libselinux-python
    yum: 
      name: "{{ packages }}"
      state: present 
    vars:
      packages:
      - policycoreutils-python
      - libselinux-python
    when: (ansible_distribution == "Amazon") or (ansible_os_family == "RedHat" and ansible_distribution_major_version == "7")

  - name: install stuff
    yum: 
      name: "{{ packages }}"
      state: present 
    vars:
      packages:
      - python3-libselinux
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: disable selinux
    selinux: state=disabled

  - name: add firewall rules
    command: /sbin/iptables -I INPUT -s {{item}} -p tcp -j ACCEPT
    with_items:
    - 192.168.70.73
    - 192.168.70.72
    - 192.168.70.71

  - name: add the percona repo
    yum: name=https://repo.percona.com/yum/percona-release-latest.noarch.rpm

  - name: add the epel repo for centos7 
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

# - name: set up pxc-80 repo
#   command: percona-release setup -y pxc-80

  - name: set up pxc-80 repo
    command: percona-release enable-only pxc-80 testing

  - name: add the testing tools repo
    command: percona-release enable tools release

  - name: disable the mysql module on RHEL/CentOS 8
    command: /usr/bin/dnf module disable mysql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install PXC
    yum: 
      name: "{{ packages }}"
      state: present 
    vars:
      packages:
      - percona-xtradb-cluster-full 
      - sysbench
      - sysbench-tpcc
 
  - name: start service on CentOS 7/8
    command: systemctl start mysql
    when: ansible_os_family == "RedHat" 

  - name: set root password
    command: /vagrant/setpass_57.sh

  - name: stop service on CentOS 7/8
    command: systemctl stop mysql
    when: ansible_os_family == "RedHat" 

  - name: copy pxc config
    template: src=../templates/my_rpm_80.j2 dest=/etc/my.cnf
    when: ansible_os_family == "RedHat" 

  - name: copy pxc certs
    copy: 
      src: ../support-files/certs/
      dest: /etc/mysql/certs/
    when: ansible_os_family == "RedHat" 

# - name: stop the play
#   command: /vagrant/stop.sh

  - name: bootstrap cluster on CentOS 7/8
    command: systemctl start mysql@bootstrap.service
    when: ansible_os_family == "RedHat" 

  - name: install plugins
    command: /vagrant/plugins_test_pxc_80.sh

  - name: check PXC-8.0 version
    command: /vagrant/version_check.sh pxc80

# - name: run sysbench tpcc prepare script
#   command: /usr/share/sysbench/tpcc.lua --mysql-user=sysbench --mysql-password=test --mysql-db=sbtest --time=30 --threads=64 --report-interval=1 --tables=3 --scale=10 --db-driver=mysql --use_fk=0 --force_pk=1 --trx_level=RC prepare 

# - name: run sysbench tpcc benchmark
#   command: /usr/share/sysbench/tpcc.lua --mysql-user=sysbench --mysql-password=test --mysql-db=sbtest --time=30 --threads=64 --report-interval=1 --tables=3 --scale=10 --db-driver=mysql --use_fk=0 --force_pk=1 --trx_level=RC run

